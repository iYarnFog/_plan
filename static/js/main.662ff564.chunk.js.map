{"version":3,"sources":["pages/apps/courseTable/courseTable.tsx","pages/workspace/components/CheckCard.tsx","pages/workspace/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["format","sections","dayjs","weeks","courses","name","teacher","room","color","blue","primary","geekblue","purple","schedules","start","end","CourseTable","useState","width","setWidth","height","setHeight","columns","gap","className","styles","schedule","Item","span","month","map","item","index","ref","element","getBoundingClientRect","length","style","background","marginTop","wordWrap","padding","transform","CheckCard","props","onClick","icon","position","fontSize","description","Workspace","navigate","useNavigate","applications","Schedule","theme","size","fill","Optimize","Toast","show","CalendarDot","Planet","App","display","setDisplay","location","useLocation","useEffect","pathname","routers","path","status","fullPage","useRoutes","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.662ff564.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styles from \"./index.less\";\r\nimport dayjs from \"dayjs\";\r\nimport { AutoCenter, Card, Grid } from \"antd-mobile\";\r\nimport { blue, geekblue, purple } from \"@ant-design/colors\";\r\n\r\nconst format = \"HH:mm\";\r\nconst sections = [\r\n    [dayjs('0000-00-00 08:00'), dayjs('0000-00-00 08:50')],\r\n    [dayjs('0000-00-00 09:00'), dayjs('0000-00-00 09:50')],\r\n    [dayjs('0000-00-00 10:10'), dayjs('0000-00-00 11:00')],\r\n    [dayjs('0000-00-00 11:10'), dayjs('0000-00-00 12:00')],\r\n    [dayjs('0000-00-00 14:30'), dayjs('0000-00-00 15:20')],\r\n    [dayjs('0000-00-00 15:30'), dayjs('0000-00-00 16:20')],\r\n    [dayjs('0000-00-00 16:30'), dayjs('0000-00-00 17:20')],\r\n    [dayjs('0000-00-00 17:30'), dayjs('0000-00-00 18:20')],\r\n];\r\nconst weeks = ['一', '二', '三', '四', '五', '六', '七'];\r\nconst courses = [{\r\n    name: '高等数学1',\r\n    teacher: '朱晓宁',\r\n    room: 'YW310',\r\n    color: blue.primary,\r\n}, {\r\n    name: '程序设计基础',\r\n    teacher: '连为民',\r\n    room: 'YB413',\r\n    color: geekblue.primary,\r\n}, {\r\n    name: '大学英语读写',\r\n    teacher: '马媛媛',\r\n    room: 'YA105',\r\n    color: purple.primary,\r\n}];\r\nconst schedules = [\r\n    [{\r\n        ...courses[0],\r\n        start: 0,\r\n        end: 1\r\n    }], [], [{\r\n        ...courses[1],\r\n        start: 0,\r\n        end: 1\r\n    }, {\r\n        ...courses[2],\r\n        start: 2,\r\n        end: 3\r\n    }], [], [], [], []\r\n]\r\n\r\nconst CourseTable: React.FC = () => {\r\n\r\n    const [width, setWidth] = useState<number>(0);\r\n    const [height, setHeight] = useState<number>(0);\r\n\r\n    return (\r\n        <Grid columns={24} gap={6} className={styles.schedule}>\r\n            <Grid.Item span={2}>\r\n                <Grid.Item>\r\n                    <Card>\r\n                        <AutoCenter>\r\n                            {dayjs().month() + 1}\r\n                        </AutoCenter>\r\n                    </Card>\r\n                </Grid.Item>\r\n                <br/>\r\n                <Grid columns={1} gap={6}>\r\n                    {sections.map((item, index) =>\r\n                        <Grid.Item>\r\n                            <div\r\n                                ref={element => {\r\n                                    if (element) {\r\n                                        setHeight(element.getBoundingClientRect().height);\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <Card>\r\n                                    <AutoCenter>\r\n                                        {index}\r\n                                    </AutoCenter>\r\n                                    <AutoCenter>\r\n                                        {item[0].format(format)}\r\n                                    </AutoCenter>\r\n                                    <AutoCenter>\r\n                                        {item[1].format(format)}\r\n                                    </AutoCenter>\r\n                                </Card>\r\n                            </div>\r\n                        </Grid.Item>\r\n                    )}\r\n                </Grid>\r\n            </Grid.Item>\r\n            <Grid.Item span={22}>\r\n                <Grid columns={weeks.length} gap={6}>\r\n                    {weeks.map(item =>\r\n                        <Grid.Item>\r\n                            <div\r\n                                ref={element => {\r\n                                    if (element) {\r\n                                        setWidth(element.getBoundingClientRect().width);\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <Card>\r\n                                    <AutoCenter>\r\n                                        {item}\r\n                                    </AutoCenter>\r\n                                </Card>\r\n                            </div>\r\n                        </Grid.Item>\r\n                    )}\r\n                </Grid>\r\n                <br/>\r\n                <Grid columns={weeks.length} gap={6}>\r\n                    {schedules.map(schedule =>\r\n                        <Grid.Item>\r\n                            <Grid columns={1} gap={6}>\r\n                                {schedule.map((item, index) => {\r\n                                    const fix = 6.04;\r\n                                    const style = {\r\n                                        width: width,\r\n                                        height: height * (item.end - item.start) * 2 + fix,\r\n                                        background: item.color,\r\n                                        marginTop: (height + fix) * (item.start - index * 2),\r\n                                        wordWrap: 'break-word',\r\n                                        padding: 0,\r\n                                        color: 'white',\r\n                                    };\r\n                                    return (\r\n                                        <Grid.Item>\r\n                                            <Card style={style}>\r\n                                                <div\r\n                                                    style={{\r\n                                                        transform: 'scale(0.864)',\r\n                                                    }}\r\n                                                >\r\n                                                    {item.name}@{item.room}\r\n                                                    <AutoCenter>\r\n                                                        {item.teacher}\r\n                                                    </AutoCenter>\r\n                                                </div>\r\n                                            </Card>\r\n                                        </Grid.Item>\r\n                                    );\r\n                                })}\r\n                            </Grid>\r\n                        </Grid.Item>\r\n                    )}\r\n                </Grid>\r\n            </Grid.Item>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CourseTable;\r\n","import React from \"react\";\r\nimport { Card, Grid } from \"antd-mobile\";\r\n\r\nconst CheckCard: React.FC<{\r\n    icon: any,\r\n    name: any,\r\n    description: any,\r\n    onClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\r\n}> = (props) => {\r\n    return (\r\n        <Card onClick={props.onClick}>\r\n            <Grid columns={24}>\r\n                <Grid.Item span={5}>\r\n                    {props.icon}\r\n                </Grid.Item>\r\n                <Grid.Item span={19}>\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            marginTop: -2.604\r\n                        }}\r\n                    >\r\n                        <span>\r\n                            <strong>\r\n                                {props.name}\r\n                            </strong>\r\n                        </span>\r\n                        <br/>\r\n                        <span\r\n                            style={{\r\n                                color: '#969696',\r\n                                fontSize: 12\r\n                            }}\r\n                        >\r\n                            {props.description}\r\n                        </span>\r\n                    </div>\r\n                </Grid.Item>\r\n            </Grid>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CheckCard;\r\n","import React from 'react';\r\nimport { Grid, Toast } from \"antd-mobile\";\r\nimport CheckCard from \"./components/CheckCard\";\r\nimport { CalendarDot, Optimize, Planet, Schedule } from \"@icon-park/react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Workspace: React.FC = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const applications = [{\r\n        icon: <Schedule theme=\"outline\" size=\"24\" fill=\"#333\"/>,\r\n        name: '课程表',\r\n        description: '本学期有13门课程',\r\n        onClick: () => {\r\n            navigate('/apps/courseTable');\r\n        }\r\n    }, {\r\n        icon: <Optimize theme=\"outline\" size=\"24\" fill=\"#333\"/>,\r\n        name: '事项',\r\n        description: '本学期有13门课程',\r\n        onClick: () => {\r\n            Toast.show('点击了卡片');\r\n        }\r\n    }, {\r\n        icon: <CalendarDot theme=\"outline\" size=\"24\" fill=\"#333\"/>,\r\n        name: '日历',\r\n        description: '本学期有13门课程',\r\n        onClick: () => {\r\n            Toast.show('点击了卡片');\r\n        }\r\n    }];\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                padding: 6.04\r\n            }}\r\n        >\r\n            <Grid\r\n                columns={2}\r\n                gap={6}\r\n            >\r\n                {applications.map(item =>\r\n                    <Grid.Item>\r\n                        <CheckCard\r\n                            {...item}\r\n                        />\r\n                    </Grid.Item>\r\n                )}\r\n            </Grid>\r\n            <br />\r\n            <Grid\r\n                columns={1}\r\n                style={{\r\n                    padding: '0 25%'\r\n                }}\r\n            >\r\n                <Grid.Item>\r\n                    <CheckCard\r\n                        icon={<Planet theme=\"outline\" size=\"24\" fill=\"#333\"/>}\r\n                        name=\"规划\"\r\n                        description=\"未来可期\"\r\n                        onClick={() => {}}\r\n                    />\r\n                </Grid.Item>\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Workspace;\r\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useRoutes } from 'react-router-dom';\nimport { ErrorBlock, FloatingBubble, Toast } from \"antd-mobile\";\nimport CourseTable from \"./pages/apps/courseTable/courseTable\";\nimport Workspace from \"./pages/workspace\";\nimport { Home } from \"@icon-park/react\";\n\nfunction App() {\n\n    const [display, setDisplay] = useState(false);\n    const location = useLocation();\n    const navigate = useNavigate();\n    useEffect(() => {\n        setDisplay(location.pathname !== '/');\n    }, [location.pathname]);\n\n    const routers = [\n        {path: '/', element: <Workspace/>},\n        {path: '/apps/courseTable', element: <CourseTable/>},\n        {path: '*', element: <ErrorBlock status='empty' fullPage/>}\n    ];\n\n    return (\n        <>\n            {useRoutes(routers)}\n            <>\n                {\n                    display ? (\n                        <FloatingBubble\n                            style={{\n                                '--initial-position-bottom': '24px',\n                                '--initial-position-right': '24px',\n                                // '--edge-distance': '24px',\n                            }}\n                            onClick={() => navigate('/')}\n                        >\n                            <Home theme=\"outline\" size=\"24\" fill=\"#fff\"/>\n                        </FloatingBubble>\n                    ) : null\n                }\n            </>\n        </>\n\n    );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}